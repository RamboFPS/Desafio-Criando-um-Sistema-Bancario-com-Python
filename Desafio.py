from datetime import datetime

def depositar(saldo, extrato, total_transacoes, LIMITE_TRANSACOES):
    if total_transacoes >= LIMITE_TRANSACOES:
        print("\n‚ùå Opera√ß√£o falhou! Limite di√°rio de transa√ß√µes atingido.\n")
        return saldo, extrato, total_transacoes
    try:
        valor = float(input("Informe o valor do dep√≥sito: ").replace(",", "."))  # Aceita "," como separador decimal
        if valor > 0:
            saldo += valor
            extrato.append(f"{datetime.now().strftime('%d/%m/%Y %H:%M')} - Dep√≥sito: R$ {valor:.2f}")
            total_transacoes += 1
            print("\n‚úÖ Dep√≥sito realizado com sucesso!\n")
        else:
            print("\n‚ùå Opera√ß√£o falhou! O valor informado √© inv√°lido.\n")
    except ValueError:
        print("\n‚ùå Entrada inv√°lida! Digite um n√∫mero v√°lido.\n")
    return saldo, extrato, total_transacoes

def sacar(saldo, extrato, total_transacoes, numero_saques, LIMITE_SAQUES, LIMITE_TRANSACOES, limite):
    if total_transacoes >= LIMITE_TRANSACOES:
        print("\n‚ùå Opera√ß√£o falhou! Limite di√°rio de transa√ß√µes atingido.\n")
        return saldo, extrato, numero_saques, total_transacoes
    try:
        valor = float(input("Informe o valor do saque: ").replace(",", "."))
        
        if valor <= 0:
            print("\n‚ùå Opera√ß√£o falhou! O valor informado √© inv√°lido.\n")
        elif valor > saldo:
            print("\n‚ùå Opera√ß√£o falhou! Voc√™ n√£o tem saldo suficiente.\n")
        elif valor > limite:
            print(f"\n‚ùå Opera√ß√£o falhou! O saque m√°ximo permitido por opera√ß√£o √© de R$ {limite:.2f}.\n")
        elif numero_saques >= LIMITE_SAQUES:
            print("\n‚ùå Opera√ß√£o falhou! N√∫mero m√°ximo de saques excedido.\n")
        else:
            saldo -= valor
            extrato.append(f"{datetime.now().strftime('%d/%m/%Y %H:%M')} - Saque: R$ {valor:.2f}")
            numero_saques += 1
            total_transacoes += 1
            print("\n‚úÖ Saque realizado com sucesso!\n")
    
    except ValueError:
        print("\n‚ùå Entrada inv√°lida! Digite um n√∫mero v√°lido.\n")
    
    return saldo, extrato, numero_saques, total_transacoes

def exibir_extrato(saldo, extrato):
    print("\n================ EXTRATO ================\n")
    if not extrato:
        print("Nenhuma movimenta√ß√£o registrada.\n")
    else:
        for item in extrato:
            print(item)
    print(f"\nSaldo atual: R$ {saldo:.2f}")
    print("==========================================\n")

def main():
    saldo = 0
    limite = 500
    extrato = []
    numero_saques = 0
    LIMITE_SAQUES = 3
    total_transacoes = 0
    LIMITE_TRANSACOES = 10

    menu = """
    üîπ Escolha uma op√ß√£o:

    [d] Depositar
    [s] Sacar
    [e] Extrato
    [q] Sair

    => """

    print("\nüí∞ Bem-vindo ao sistema banc√°rio! üí∞\n")

    while True:
        opcao = input(menu).strip().lower()

        if opcao == "d":
            saldo, extrato, total_transacoes = depositar(saldo, extrato, total_transacoes, LIMITE_TRANSACOES)
        elif opcao == "s":
            saldo, extrato, numero_saques, total_transacoes = sacar(saldo, extrato, total_transacoes, numero_saques, LIMITE_SAQUES, LIMITE_TRANSACOES, limite)
        elif opcao == "e":
            exibir_extrato(saldo, extrato)
        elif opcao == "q":
            print("\nObrigado por usar nosso sistema banc√°rio. At√© mais! üëã\n")
            break
        else:
            print("\n‚ùå Opera√ß√£o inv√°lida! Tente novamente.\n")

if __name__ == "__main__":
    main()